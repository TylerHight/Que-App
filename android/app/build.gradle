def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new IllegalStateException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.example.que_app"
    compileSdkVersion 34  // Updated to latest version

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.example.que_app"
        minSdkVersion 21
        targetSdkVersion 34  // Consistency with compileSdkVersion
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }

    configurations.all {
        resolutionStrategy {
            force 'org.jetbrains.kotlin:kotlin-stdlib:1.8.10'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.10'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'

    constraints {
        implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.10') {
            because 'kotlin-stdlib-jdk7 is now part of kotlin-stdlib'
        }
        implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10') {
            because 'kotlin-stdlib-jdk8 is now part of kotlin-stdlib'
        }
    }
}
